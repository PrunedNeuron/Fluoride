# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
    build:
        docker:
            - image: circleci/golang:alpine
            - image: postgres:latest
              environment:
                  POSTGRES_DB: fluoride_dev
                  POSTGRES_USER: ayush
                  POSTGRES_PASSWORD: ayush
                  DATABASE_HOST: postgres
                  DATABASE_DATABASE: fluoride_dev
                  DATABASE_USERNAME: ayush
                  DATABASE_PASSWORD: ayush
                  DATABASE_SSL: disable
                  PROFILER_HOST: "0.0.0.0"
                  PROFILER_PORT: "3002"
                  SERVER_HOST: "0.0.0.0"
                  SERVER_PORT: "3000"
        working_directory: /go/src/github.com/PrunedNeuron/Fluoride
        steps:
            - checkout
            - setup_remote_docker: # (2)
                  docker_layer_caching: true # (3)
            # This should go into custom primary image, here's only for the sake of explanation
            - run:
                  name: Install Docker client
                  command: |
                      set -x
                      VER="17.03.0-ce"
                      curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
                      tar -xz -C /tmp -f /tmp/docker-$VER.tgz
                      mv /tmp/docker/* /usr/bin
            # This should go into custom primary image, here's only for the sake of explanation
            - run:
                  name: Install Docker Compose
                  command: |
                      set -x
                      curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
                      chmod +x /usr/local/bin/docker-compose
            - run:
                  name: Build container and verify it's working
                  command: |
                      set -x
                      docker-compose build && docker-compose up
